{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fnil MS Sans Serif;}{\f1\fnil\fcharset2 Symbol;}{\f2\fswiss\fprq2 System;}{\f3\fnil Times New Roman;}{\f4\fswiss\fprq2 Arial;}}
{\colortbl\red0\green0\blue0;\red0\green0\blue128;\red255\green0\blue0;}
\deflang1031\pard\plain\f4\fs28\cf0 DAvE's Project Documentation
\par \plain\f4\fs22\cf0
\par \plain\f4\fs22\cf0 Project: \tab\tab\b bswCodeGenConfigPrj.dav
\par 
\par \plain\f4\fs22\cf0 Controller: \tab\tab\b XC2267-96F80
\par \plain\f4\fs22\cf0 Compiler: \tab\tab\b Keil
\par \plain\f4\fs22\cf0 Memory Model: \tab\b SMALL
\par 
\par \plain\f4\fs22\cf0 Date: \tab\tab\tab\b 2019/7/5 0:12:11
\par 
\par 
\par \plain\f4\fs22\cf2\b Please read this document carefully and note
\par \plain\f4\fs22\cf2\b the red-colored hints.
\par 
\par \plain\f4\fs22\cf2\b If you miss a file in the generated files list
\par \plain\f4\fs22\cf2\b maybe you have forgotten to select the
\par \plain\f4\fs22\cf2\b initialisation function of the related module.
\par 
\par \plain\f4\fs22\cf0 Generated Files:
\plain\f4\fs20\cf0\b
\par \tab\tab\tab MAIN.H
\par \tab\tab\tab MAIN.C
\par \tab\tab\tab SCS.H
\par \tab\tab\tab SCS.C
\par \tab\tab\tab XC22XXREGS.H
\par \tab\tab\tab CCU60.H
\par \tab\tab\tab CCU60.C
\par \tab\tab\tab BSWCODEGENCONFIGPRJ.ASM
\par 
\par 
\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Project Settings
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void MAIN_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function initializes the microcontroller.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void MAIN_vUnlockProtecReg(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function makes it possible to write one protected

\par \tab \tab register.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void MAIN_vLockProtecReg(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function makes it possible to lock one protected

\par \tab \tab register.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void MAIN_vChangeFreq(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function is used to select the external crystal and

\par \tab \tab configure the system frequency to 80Mhz/66Mhz.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void main(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the main function.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of the System Clock:\par 
\tab - VCO clock used, input clock is connected\par 
\tab - input frequency is 8.00 MHz\par 
\tab - system clock is 80.00 MHz\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Project Settings
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab _inline void SetK2(unsigned int K2)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab Sets K2 divider and waits until PLL is locked.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab K2: K2 divider

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab _inline void EnableVcoBypass(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab Enables VCO bypass and waits until bypass status is OK.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab _inline void DisableVcoBypass(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab Disables VCO bypass and waits until bypass status is OK.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab _inline void WaitForTimer13Stop(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function waits until CCU6 timer T13 has stopped.

\par \tab \tab Notes:

\par \tab \tab - Function StartT13 should have been called before.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void SCS_StartXtalOsc(unsigned int UseTimer)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function starts the crystal oscillator at XTAL1 and

\par \tab \tab XTAL2 or enables the external oscillator input at XTAL1.

\par \tab \tab If specified, the function enables and starts CCU6 timer T13

\par \tab \tab and sets EXTCLK for counting XTAL clocks; if required, PLL

\par \tab \tab frequency will be increased for synchronization purposes.

\par \tab \tab Notes:

\par \tab \tab - If UseTimer is set, the function will enable CCU6 and will

\par \tab \tab overwrite previous settings for T13; additionally, it will

\par \tab \tab overwrite previous EXTCLK clock multiplexer settings.

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab UseTimer: 0 = no XTAL clock counting, >0 = XTAL clock counting

\par \tab \tab via T13

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void SCS_SwitchSystemClock(unsigned int UseTimer)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function switches the system clock from its state after

\par \tab \tab boot program execution (internal oscillator and VCO usage) to

\par \tab \tab XTAL clock (crystal or external oscillator) and VCO usage.

\par \tab \tab If specified, the function waits for a certain number of XTAL

\par \tab \tab clocks before switching to this clock.

\par \tab \tab Notes:

\par \tab \tab - It is assumed that the HP oscillator has been started.

\par \tab \tab - UseTimer > 0 should be used only if SCS_StartXtal() with

\par \tab \tab parameter UseTimer > 0 has been called before.

\par \tab \tab - If UseTimer = 0, it must be guaranteed that XTAL

\par \tab \tab clock is stable.

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab UseTimer: 0 = no XTAL clock counting, > 0 = XTAL clock counting

\par \tab \tab via T13

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void SCS_SwitchToHighPrecBandgap(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function switches to high precision bandgap which is

\par \tab \tab required e. g. for flash operation.

\par \tab \tab Notes:

\par \tab \tab - It is assumed that high precision bandgap has been enabled

\par \tab \tab a sufficient time ago.

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void SCS_CountClocksWithTimer (SCS_EXTCLK_Type Source,\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function enables and starts CCU6 timer T13 for counting

\par \tab \tab a certain number of ticks at EXTCLK. After that time, T13

\par \tab \tab will stop.

\par \tab \tab Notes:

\par \tab \tab - The function will enable CCU6 and will overwrite previous

\par \tab \tab settings for T13; additionally, it will overwrite previous

\par \tab \tab EXTCLK clock multiplexer settings.

\par \tab \tab - System frequency must be >= 2 * clock frequency.

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab Source: The following clock source options are possible:

\par \tab \tab SCS_EXTCLK_F_PLL     PLL output frequency

\par \tab \tab SCS_EXTCLK_F_OSC     HP oscillator frequency

\par \tab \tab SCS_EXTCLK_F_WU      wakeup oscillator frequency

\par \tab \tab SCS_EXTCLK_F_TCK     test clock at Pin 2.9

\par \tab \tab SCS_EXTCLK_F_OSC_FL  internal flash oscillator frequency

\par \tab \tab SCS_EXTCLK_F_RTC     real-time clock

\par \tab \tab Clocks: Number of clocks to count, 1...65535

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Capture / Compare Unit 60 (CCU60)
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_vStartTmr(TimerNr)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro starts the selected CCU60 timer. The timer

\par \tab \tab continues counting from where it stopped.

\par \tab \tab The following definitions for TimerNr are available:

\par \tab \tab CCU60_TIMER_12

\par \tab \tab CCU60_TIMER_13

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab TimerNr:

\par \tab \tab Name of the CCU60 timer to be started

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_vStopTmr(TimerNr)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro stops the selected CCU60 timer. The content of

\par \tab \tab the timer register remains unchanged.

\par \tab \tab The following definitions for TimerNr are available:

\par \tab \tab CCU60_TIMER_12

\par \tab \tab CCU60_TIMER_13

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab TimerNr:

\par \tab \tab Name of the CCU60 timer to be stopped

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_vResetTmr(TimerNr)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro sets the selected CCU60 timer counter register

\par \tab \tab to zero. Timer is not stopped.

\par \tab \tab The following definitions for TimerNr are available:

\par \tab \tab CCU60_TIMER_12

\par \tab \tab CCU60_TIMER_13

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab TimerNr:

\par \tab \tab Name of the CCU60 timer to be cleared

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_vSetTmrPeriod(TimerNr, Value)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro loads the period register of the selected CCU60

\par \tab \tab timer.

\par \tab \tab Note: Call the macro CCU60_vEnableShadowTransfer() to

\par \tab \tab enable the shadow transfer.

\par \tab \tab The following definitions for TimerNr are available:

\par \tab \tab CCU60_TIMER_12

\par \tab \tab CCU60_TIMER_13

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab TimerNr:

\par \tab \tab Name of the CCU60 timer to be used

\par \tab \tab Value:

\par \tab \tab 16-bit Value with which the CCU60 timer reload register is

\par \tab \tab to be loaded

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_uwGetTmrCounter(TimerNr)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro returns the contens of the selected CCU60 timer

\par \tab \tab counter register.

\par \tab \tab The following definitions for TimerNr are available:

\par \tab \tab CCU60_TIMER_12

\par \tab \tab CCU60_TIMER_13

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b 16-bit counter value\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab TimerNr:

\par \tab \tab Name of the CCU60 timer to be used

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_uwSetTmrCounter(TimerNr, Value)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro loads the selected CCU60 timer counter register

\par \tab \tab with the parameter Value . It is possible to use this macro

\par \tab \tab only if the selected timer is stopped.

\par \tab \tab The following definitions for TimerNr are available:

\par \tab \tab CCU60_TIMER_12

\par \tab \tab CCU60_TIMER_13

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab TimerNr:

\par \tab \tab Name of the CCU60 timer to be used

\par \tab \tab Value:

\par \tab \tab 16-bit value with which the CCU60 counter register is to be

\par \tab \tab loaded

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_vSetDeadTimePeriod(ubValue)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro loads the counter of the deat time register.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ubValue:

\par \tab \tab counter value (ubValue = 0x01 .. 0x3F)

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_vEnableShadowTransfer(TimerNr)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro enables the transfer from the shadow registers

\par \tab \tab to the actual CCU60 registers.

\par \tab \tab The following definitions for TimerNr are available:

\par \tab \tab CCU60_TIMER_12

\par \tab \tab CCU60_TIMER_13

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab TimerNr:

\par \tab \tab Name of the CCU60 timer to be used

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_vLoadChannelShadowRegister(ChName, Value)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro loads the selected CCU60 channel shadow register

\par \tab \tab with the parameter Value.

\par \tab \tab The following definitions are available for RegName:

\par \tab \tab CCU60_CHANNEL_0 .. CCU60_CHANNEL_3 (see @Defines in header

\par \tab \tab file)

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ChName:

\par \tab \tab Name of the CCU60 channel to be loaded

\par \tab \tab Value:

\par \tab \tab 16-bit Value with which the CCU60 shadow register is to be

\par \tab \tab loaded

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_uwGetChannelShadowRegister(ChName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro returns the content of the CCU60 capture/compare

\par \tab \tab shadow register of the selected channel.

\par \tab \tab The following definitions are available for RegName:

\par \tab \tab CCU60_CHANNEL_0 .. CCU60_CHANNEL_3 (see @Defines in header

\par \tab \tab file)

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Current 16-bit value of the CCU60 shadow register\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ChName:

\par \tab \tab Name of the CCU60 channel to be readed

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_uwGetChannelRegister(ChName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro returns the content of the CCU60 capture/compare

\par \tab \tab register of the selected channel.

\par \tab \tab The following definitions are available for RegName:

\par \tab \tab CCU60_CHANNEL_0 .. CCU60_CHANNEL_3 (see @Defines in header

\par \tab \tab file)

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Current 16-bit value of the CCU60 register\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ChName:

\par \tab \tab Name of the CCU60 channel to be readed

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_vSetStatusBit(ChName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro sets the capture / compare modifikation status

\par \tab \tab bit of the selected CCU60 channel.

\par \tab \tab The following definitions are available for ChName:

\par \tab \tab CCU60_CHANNEL_0 .. CCU60_CHANNEL_3 (see @Defines in header

\par \tab \tab file)

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ChName:

\par \tab \tab Name of the CCU60 channel to be used

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CCU60_vResetStatusBit(ChName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro resets the capture / compare modifikation status

\par \tab \tab bit of the selected CCU60 channel.

\par \tab \tab The following definitions are available for ChName:

\par \tab \tab CCU60_CHANNEL_0 .. CCU60_CHANNEL_3 (see @Defines in header

\par \tab \tab file)

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ChName:

\par \tab \tab Name of the CCU60 channel to be used

\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CCU60_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the CCU60 function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CCU60_viNodeI0(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the interrupt service routine for the CCU60 node

\par \tab \tab I0. If the content of the corresponding compare timer

\par \tab \tab (configurable) equals the content of the capture/compare

\par \tab \tab register or if a capture event occurs at the associated

\par \tab \tab port pin, the interrupt request flag is set and an

\par \tab \tab interrupt is triggered (only if enabled).

\par \tab \tab Please note that you have to add application specific code

\par \tab \tab to this function.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of KERNEL REGISTERS :\par 
\tab - CCU60 Module is enabled.\par 
\tab - The CCU60 module clock = 80.000 MHz.\par 
\tab - T12 is enabled.\par 
\tab - T13 is enabled.\par 
\tab - MCM is enabled.\par 
\par 
\tab Configuration of CCU60 Timer 12:\par 
\tab - Timer 12 Input clock factor (T12CLK) is 0\par 
\tab - prescaler factor is 0\par 
\tab - Timer 12 run bit is set\par 
\tab - Single shot mode is disabled\par 
\tab - Timer 12 works in edge aligned mode\par 
\tab - Interrupt on period match is enabled\par 
\tab - Interrupt on one match is disabled\par 
\tab - No External run selection is selected.\par 
\tab - Timer mode is selected.\par 
\tab -\par 
\par 
\tab Configuration of T13HR Signal:\par 
\tab - Signal T13HRA is selected as Input\par 
\par 
\tab Configuration of CCU60 Timer 13:\par 
\tab - Timer 13 Input Clock factor (T13CLK) is 0\par 
\tab - prescaler factor is 0\par 
\tab - Timer 13 run bit is set\par 
\tab - No External run selection is selected.\par 
\tab - Timer mode is selected.\par 
\tab -\par 
\tab - Single shot mode is disabled\par 
\tab - Interrupt on period match is enabled\par 
\tab - Interrupt on compare match is disabled\par 
\par 
\tab Configuration of Multi Channel Mode:\par 
\tab - Multi channel mode is disabled\par 
\par 
\tab Configuration of CCU60 Channel 0:\par 
\tab - Channel 0 is disabled\par 
\tab - T12 modulation for output CC60 is disabled\par 
\tab - T13 modulation for output CC60 is disabled\par 
\tab - T13 modulation for output CC60 is disabled\par 
\par 
\tab - Generation interrupt on flag ICC60R is enabled\par 
\tab - Generation interrupt on flag ICC60F is disabled\par 
\par 
\tab Configuration of CCU60 Channel 1:\par 
\tab - Compare mode 1 is selected\par 
\tab - T12 modulation for output CC61 is disabled\par 
\tab - T13 modulation for output CC61 is disabled\par 
\tab - T12 modulation for output COUT61 is enabled\par 
\tab - T13 modulation for output COUT61 is disabled\par 
\tab - The trap functionality of the pin COUT61 is disabled\par 
\tab - The compare output COUT61 drives passive level while CC61ST is '0'\par 
\tab - The passive level of the output COUT61 is '0'\par 
\tab - Dead time generation is disabled\par 
\par 
\tab - Generation interrupt on flag ICC61R is enabled\par 
\tab - Generation interrupt on flag ICC61F is disabled\par 
\par 
\tab Configuration of CCU60 Channel 2:\par 
\tab - Compare mode 1 is selected\par 
\tab - T12 modulation for output CC62 is disabled\par 
\tab - T13 modulation for output CC62 is disabled\par 
\tab - T12 modulation for output COUT62 is enabled\par 
\tab - T13 modulation for output COUT62 is disabled\par 
\tab - The trap functionality of the pin COUT62 is disabled\par 
\tab - The compare output COUT62 drives passive level while CC62ST is '0'\par 
\tab - The passive level of the output COUT62 is '0'\par 
\tab - Dead time generation is disabled\par 
\par 
\tab - Generation interrupt on flag ICC62R is enabled\par 
\tab - Generation interrupt on flag ICC62F is disabled\par 
\par 
\tab Configuration of CCU60 Channel 3:\par 
\tab - T13 modulation for output COUT63 is enabled\par 
\tab - The trap functionality of the pin COUT63 is disabled\par 
\tab - The compare output COUT63 drives passive level while CC63ST is '0'\par 
\tab - The passive level of the output COUT63 is '0'\par 
\tab - T13 output is not inverted\par 
\par 
\tab Configuration of CCU60 trap control:\par 
\tab - Trap can only be generated by SW by setting the bit TRPF\par 
\tab - The trap state is left when a zero-match of T12 (while counting up)\par 
\tab is detected (synchronization to T12)\par 
\tab - Bit TRPF is automatically cleared by HW (according to TRPPEN, TRPM0\par 
\tab and TRPM1)\par 
\tab - Trap interrupt is disabled\par 
\par 
\tab Configuration of CCU60 interrupt control:\par 
\tab - For channel 0 interrupts is node I0 selected\par 
\tab - For channel 1 interrupts is node I0 selected\par 
\tab - For channel 2 interrupts is node I0 selected\par 
\tab - For correct hall event interrupt is node I0 selected\par 
\tab - For error interrupts is node I0 selected\par 
\tab - For T12 interrupts is node I0 selected\par 
\tab - For T13 interrupts is node I0 selected\par 
\par 
\tab Configuration of the used CCU60 Channel Port Pins:\par 
\tab - P10.4 is used for CCU60 output(COUT61)\par 
\tab - P10.5 is used for CCU60 output(COUT62)\par 
\tab - P10.7 is used for  CCU60 output(COUT63)\par 
\par 
\tab Configuration of the used CCU60 Channels Interrupts:\par 
\tab NodeI0 service request node configuration:\par 
\tab - NodeI0 interrupt priority level (ILVL) = 1\par 
\tab - NodeI0 interrupt group level (GLVL) = 0\par 
\tab - NodeI0 group priority extension (GPX) = 0\par 
\par 
\tab Configuration of T12, T13 ---- CCU60_TCTR4 Register:\par 
\tab - Enable shadow transfer of T12 and T13\par 
\tab - Timer 12 run bit is set\par 
\tab - Timer 13 run bit is set\par 
\par 

}
