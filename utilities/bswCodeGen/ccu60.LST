C166 COMPILER V7.00, CCU60                                                                 06/30/2019 20:28:30 PAGE 1   


C166 COMPILER V7.00, COMPILATION OF MODULE CCU60
OBJECT MODULE PLACED IN ccu60.OBJ
COMPILER INVOKED BY: C:\Program Files\Keil4Inf\C166\BIN\C166.EXE ccu60.c MODV2 BROWSE MODV2 DEBUG

 stmt lvl     source

    1         //****************************************************************************
    2         // @Module        Capture / Compare Unit 60 (CCU60)
    3         // @Filename      ccu60.c
    4         // @Project       bswCodeGenConfigPrj.dav
    5         //----------------------------------------------------------------------------
    6         // @Controller    Infineon XC2267-96F80
    7         //
    8         // @Compiler      Keil
    9         //
   10         // @Codegenerator 2.2
   11         //
   12         // @Description   This file contains functions that use the CCU60 module.
   13         //
   14         //----------------------------------------------------------------------------
   15         // @Date          2019/6/30 19:43:30
   16         //
   17         //****************************************************************************
   18         
   19         // USER CODE BEGIN (CCU60_General,1)
   20         
   21         // USER CODE END
   22         
   23         
   24         
   25         //****************************************************************************
   26         // @Project Includes
   27         //****************************************************************************
   28         
   29         #include "main.h"
   30         
   31         // USER CODE BEGIN (CCU60_General,2)
   32         
   33         // USER CODE END
   34         
   35         
   36         //****************************************************************************
   37         // @Macros
   38         //****************************************************************************
   39         
   40         // USER CODE BEGIN (CCU60_General,3)
   41         
   42         // USER CODE END
   43         
   44         
   45         //****************************************************************************
   46         // @Defines
   47         //****************************************************************************
   48         
   49         // USER CODE BEGIN (CCU60_General,4)
   50         
   51         // USER CODE END
   52         
   53         
   54         //****************************************************************************
   55         // @Typedefs
C166 COMPILER V7.00, CCU60                                                                 06/30/2019 20:28:30 PAGE 2   

   56         //****************************************************************************
   57         
   58         // USER CODE BEGIN (CCU60_General,5)
   59         
   60         // USER CODE END
   61         
   62         
   63         //****************************************************************************
   64         // @Imported Global Variables
   65         //****************************************************************************
   66         
   67         // USER CODE BEGIN (CCU60_General,6)
   68         
   69         // USER CODE END
   70         
   71         
   72         //****************************************************************************
   73         // @Global Variables
   74         //****************************************************************************
   75         
   76         // USER CODE BEGIN (CCU60_General,7)
   77         
   78         // USER CODE END
   79         
   80         
   81         //****************************************************************************
   82         // @External Prototypes
   83         //****************************************************************************
   84         
   85         // USER CODE BEGIN (CCU60_General,8)
   86         
   87         // USER CODE END
   88         
   89         
   90         //****************************************************************************
   91         // @Prototypes Of Local Functions
   92         //****************************************************************************
   93         
   94         // USER CODE BEGIN (CCU60_General,9)
   95         
   96         // USER CODE END
   97         
   98         
   99         //****************************************************************************
  100         // @Function      void CCU60_vInit(void) 
  101         //
  102         //----------------------------------------------------------------------------
  103         // @Description   This is the initialization function of the CCU60 function 
  104         //                library. It is assumed that the SFRs used by this library 
  105         //                are in reset state. 
  106         //
  107         //----------------------------------------------------------------------------
  108         // @Returnvalue   None
  109         //
  110         //----------------------------------------------------------------------------
  111         // @Parameters    None
  112         //
  113         //----------------------------------------------------------------------------
  114         // @Date          2019/6/30
  115         //
  116         //****************************************************************************
  117         
C166 COMPILER V7.00, CCU60                                                                 06/30/2019 20:28:30 PAGE 3   

  118         // USER CODE BEGIN (Init,1)
  119         
  120         // USER CODE END
  121         
  122         void CCU60_vInit(void)
  123         {
  124  1        // USER CODE BEGIN (Init,2)
  125  1      
  126  1        // USER CODE END
  127  1      
  128  1        ///  -----------------------------------------------------------------------
  129  1        ///  Configuration of KERNEL REGISTERS :
  130  1        ///  -----------------------------------------------------------------------
  131  1        ///  - CCU60 Module is enabled.
  132  1        ///  - The CCU60 module clock = 80.000 MHz. 
  133  1        ///  - T12 is enabled.
  134  1        ///  - T13 is enabled.
  135  1        ///  - MCM is enabled.
  136  1      
  137  1        CCU60_KSCFG    =  0x0003;      // Kernel State Configuration Register
  138  1      
  139  1        _nop_();    //No operation function as Delay
  140  1        _nop_();    //No operation function as Delay
  141  1        _nop_();    //No operation function as Delay
  142  1        _nop_();    //No operation function as Delay
  143  1      
  144  1        ///  -----------------------------------------------------------------------
  145  1        ///  Configuration of CCU60 Timer 12:
  146  1        ///  -----------------------------------------------------------------------
  147  1        ///  - Timer 12 Input clock factor (T12CLK) is 2
  148  1        ///  - prescaler factor is 0
  149  1        ///  - Timer 12 run bit is set
  150  1        ///  - Single shot mode is disabled
  151  1        ///  - Timer 12 works in edge aligned mode
  152  1        ///  - Interrupt on period match is enabled
  153  1        ///  - Interrupt on one match is disabled
  154  1        ///  - No External run selection is selected.
  155  1        ///  - Timer mode is selected.
  156  1        ///  - 
  157  1      
  158  1        CCU60_T12PR    =  0x0018;      // load CCU60 T12 period register
  159  1      
  160  1        ///  -----------------------------------------------------------------------
  161  1        ///  Configuration of T13HR Signal:
  162  1        ///  -----------------------------------------------------------------------
  163  1        ///  - Signal T13HRA is selected as Input
  164  1      
  165  1        ///  -----------------------------------------------------------------------
  166  1        ///  Configuration of CCU60 Timer 13:
  167  1        ///  -----------------------------------------------------------------------
  168  1        ///  - Timer 13 Input Clock factor (T13CLK) is 2
  169  1        ///  - prescaler factor is 0
  170  1        ///  - Timer 13 run bit is set
  171  1        ///  - No External run selection is selected.
  172  1        ///  - Timer mode is selected.
  173  1        ///  - 
  174  1        ///  - Single shot mode is disabled
  175  1        ///  - Interrupt on period match is enabled
  176  1        ///  - Interrupt on compare match is disabled
  177  1      
  178  1        CCU60_T13PR    =  0x0018;      // load CCU60 T13 period register
  179  1      
C166 COMPILER V7.00, CCU60                                                                 06/30/2019 20:28:30 PAGE 4   

  180  1        CCU60_TCTR0    =  0x0202;      // load CCU60 timer control register 0
  181  1        CCU60_TCTR2    =  0x0020;      // load CCU60 timer control register 2
  182  1      
  183  1        ///  -----------------------------------------------------------------------
  184  1        ///  Configuration of Multi Channel Mode:
  185  1        ///  -----------------------------------------------------------------------
  186  1        ///  - Multi channel mode is disabled
  187  1      
  188  1      
  189  1        ///  -----------------------------------------------------------------------
  190  1        ///  Configuration of CCU60 Channel 0:
  191  1        ///  -----------------------------------------------------------------------
  192  1        ///  - Channel 0 is disabled
  193  1        ///  - T12 modulation for output CC60 is disabled
  194  1        ///  - T13 modulation for output CC60 is disabled
  195  1        ///  - T13 modulation for output CC60 is disabled
  196  1      
  197  1        ///  - Generation interrupt on flag ICC60R is enabled
  198  1        ///  - Generation interrupt on flag ICC60F is disabled
  199  1      
  200  1        CCU60_CC60SR   =  0x0000;      // Load CCU60 capture/compare shadow 
  201  1                                       // register for channel 0
  202  1      
  203  1        ///  -----------------------------------------------------------------------
  204  1        ///  Configuration of CCU60 Channel 1:
  205  1        ///  -----------------------------------------------------------------------
  206  1        ///  - Compare mode 1 is selected
  207  1        ///  - T12 modulation for output CC61 is disabled
  208  1        ///  - T13 modulation for output CC61 is disabled
  209  1        ///  - T12 modulation for output COUT61 is enabled
  210  1        ///  - T13 modulation for output COUT61 is disabled
  211  1        ///  - The trap functionality of the pin COUT61 is disabled
  212  1        ///  - The compare output COUT61 drives passive level while CC61ST is '0'
  213  1        ///  - The passive level of the output COUT61 is '0'
  214  1        ///  - Dead time generation is disabled
  215  1      
  216  1        ///  - Generation interrupt on flag ICC61R is enabled
  217  1        ///  - Generation interrupt on flag ICC61F is disabled
  218  1      
  219  1        CCU60_CC61SR   =  0x0000;      // Load CCU60 capture/compare shadow 
  220  1                                       // register for channel 1
  221  1      
  222  1        ///  -----------------------------------------------------------------------
  223  1        ///  Configuration of CCU60 Channel 2:
  224  1        ///  -----------------------------------------------------------------------
  225  1        ///  - Compare mode 1 is selected
  226  1        ///  - T12 modulation for output CC62 is disabled
  227  1        ///  - T13 modulation for output CC62 is disabled
  228  1        ///  - T12 modulation for output COUT62 is enabled
  229  1        ///  - T13 modulation for output COUT62 is disabled
  230  1        ///  - The trap functionality of the pin COUT62 is disabled
  231  1        ///  - The compare output COUT62 drives passive level while CC62ST is '0'
  232  1        ///  - The passive level of the output COUT62 is '0'
  233  1        ///  - Dead time generation is disabled
  234  1      
  235  1        ///  - Generation interrupt on flag ICC62R is enabled
  236  1        ///  - Generation interrupt on flag ICC62F is disabled
  237  1      
  238  1        CCU60_CC62SR   =  0x0000;      // Load CCU60 capture/compare shadow 
  239  1                                       // register for channel 2
  240  1      
  241  1        ///  -----------------------------------------------------------------------
C166 COMPILER V7.00, CCU60                                                                 06/30/2019 20:28:30 PAGE 5   

  242  1        ///  Configuration of CCU60 Channel 3:
  243  1        ///  -----------------------------------------------------------------------
  244  1        ///  - T13 modulation for output COUT63 is enabled
  245  1        ///  - The trap functionality of the pin COUT63 is disabled
  246  1        ///  - The compare output COUT63 drives passive level while CC63ST is '0'
  247  1        ///  - The passive level of the output COUT63 is '0'
  248  1        ///  - T13 output is not inverted
  249  1      
  250  1      
  251  1        CCU60_CC63SR   =  0x0000;      // load CCU60 capture/compare shadow 
  252  1                                       // register for channel 3
  253  1      
  254  1      
  255  1        CCU60_T12DTC   =  0x0001;      // load CCU60 dead time control register for 
  256  1                                       // timer T12
  257  1      
  258  1        CCU60_T12MSEL  =  0x0110;      // load CCU60 T12 campture/compare mode 
  259  1                                       // select register
  260  1      
  261  1        CCU60_MODCTR   =  0x8028;      // load CCU60 modulation control register
  262  1      
  263  1        ///  -----------------------------------------------------------------------
  264  1        ///  Configuration of CCU60 trap control:
  265  1        ///  -----------------------------------------------------------------------
  266  1        ///  - Trap can only be generated by SW by setting the bit TRPF
  267  1        ///  - The trap state is left when a zero-match of T12 (while counting up) 
  268  1        ///    is detected (synchronization to T12)
  269  1        ///  - Bit TRPF is automatically cleared by HW (according to TRPPEN, TRPM0 
  270  1        ///    and TRPM1)
  271  1        ///  - Trap interrupt is disabled
  272  1      
  273  1      
  274  1        ///  -----------------------------------------------------------------------
  275  1        ///  Configuration of CCU60 interrupt control:
  276  1        ///  -----------------------------------------------------------------------
  277  1        ///  - For channel 0 interrupts is node I0 selected
  278  1        ///  - For channel 1 interrupts is node I0 selected
  279  1        ///  - For channel 2 interrupts is node I0 selected
  280  1        ///  - For correct hall event interrupt is node I0 selected
  281  1        ///  - For error interrupts is node I0 selected
  282  1        ///  - For T12 interrupts is node I0 selected
  283  1        ///  - For T13 interrupts is node I0 selected
  284  1      
  285  1      
  286  1        CCU60_INP      =  0x0000;      // Load CCU60 capture/compare interrupt node 
  287  1                                       // pointer register
  288  1      
  289  1        CCU60_IEN      =  0x0295;      // Load CCU60 capture/compare interrupt 
  290  1                                       // enable register
  291  1      
  292  1      
  293  1        ///  -----------------------------------------------------------------------
  294  1        ///  Configuration of the used CCU60 Channel Port Pins:
  295  1        ///  -----------------------------------------------------------------------
  296  1        ///  - P10.4 is used for CCU60 output(COUT61)
  297  1        ///  - P10.5 is used for CCU60 output(COUT62)
  298  1        ///  - P10.7 is used for  CCU60 output(COUT63)
  299  1      
  300  1        P10_IOCR04 = 0x00A0;    //set direction register
  301  1        P10_IOCR05 = 0x00A0;    //set direction register
  302  1        P10_IOCR07 = 0x00A0;    //set direction register
  303  1      
C166 COMPILER V7.00, CCU60                                                                 06/30/2019 20:28:30 PAGE 6   

  304  1        CCU60_PISELL   =  0xFFC0;      // Load CCU60 Port Input Selection register
  305  1      
  306  1        ///  -----------------------------------------------------------------------
  307  1        ///  Configuration of the used CCU60 Channels Interrupts:
  308  1        ///  -----------------------------------------------------------------------
  309  1        ///  NodeI0 service request node configuration:
  310  1        ///  - NodeI0 interrupt priority level (ILVL) = 1
  311  1        ///  - NodeI0 interrupt group level (GLVL) = 0
  312  1        ///  - NodeI0 group priority extension (GPX) = 0
  313  1      
  314  1        CCU60_0IC      =  0x0044;     
  315  1      
  316  1      
  317  1        ///  -----------------------------------------------------------------------
  318  1        ///  Configuration of T12, T13 ---- CCU60_TCTR4 Register:
  319  1        ///  -----------------------------------------------------------------------
  320  1        ///  - Enable shadow transfer of T12 and T13
  321  1        ///  - Timer 12 run bit is set
  322  1        ///  - Timer 13 run bit is set
  323  1        CCU60_TCTR4    =  0x4242;      // load CCU60 timer control register 4
  324  1      
  325  1      
  326  1        // USER CODE BEGIN (NodeI3,3)
  327  1      
  328  1        // USER CODE END
  329  1      
  330  1      } //  End of function CCU60_vInit
  331         
  332         
  333         //****************************************************************************
  334         // @Function      void CCU60_viNodeI0(void) 
  335         //
  336         //----------------------------------------------------------------------------
  337         // @Description   This is the interrupt service routine for the CCU60 node 
  338         //                I0. If the content of the corresponding compare timer 
  339         //                (configurable) equals the content of the capture/compare 
  340         //                register or if a capture event occurs at the associated 
  341         //                port pin, the interrupt request flag is set and an 
  342         //                interrupt is triggered (only if enabled).
  343         //                Please note that you have to add application specific code 
  344         //                to this function.
  345         //
  346         //----------------------------------------------------------------------------
  347         // @Returnvalue   None
  348         //
  349         //----------------------------------------------------------------------------
  350         // @Parameters    None
  351         //
  352         //----------------------------------------------------------------------------
  353         // @Date          2019/6/30
  354         //
  355         //****************************************************************************
  356         
  357         // USER CODE BEGIN (NodeI0,1)
  358         
  359         // USER CODE END
  360         
  361         void CCU60_viNodeI0(void) interrupt CCU60_NodeI0_INT
  362         {
  363  1        // USER CODE BEGIN (NodeI0,2)
  364  1      
  365  1        // USER CODE END
C166 COMPILER V7.00, CCU60                                                                 06/30/2019 20:28:30 PAGE 7   

  366  1      
  367  1        if(CCU60_IS & 0x0001)   // if CCU60_IS_ICC60R
  368  1        {
  369  2          // Capture, Compare match rising edge detection an channel 0
  370  2      
  371  2          // USER CODE BEGIN (NodeI0,10)
  372  2      
  373  2          // USER CODE END
  374  2      
  375  2          CCU60_ISR |= 0x0001;  // clear flag CCU60_IS_ICC60R
  376  2        }
  377  1      
  378  1        if(CCU60_IS & 0x0004)  // if CCU60_IS_ICC61R
  379  1        {
  380  2          // Capture, Compare match rising edge detection an channel 1
  381  2      
  382  2          // USER CODE BEGIN (NodeI0,12)
  383  2      
  384  2          // USER CODE END
  385  2      
  386  2          CCU60_ISR |= 0x0004;  // clear flag CCU60_IS_ICC61R
  387  2        }
  388  1      
  389  1        if(CCU60_IS & 0x0010)  // if CCU60_IS_ICC62R
  390  1        {
  391  2          // Capture, Compare match rising edge detection an channel 2
  392  2      
  393  2          // USER CODE BEGIN (NodeI0,14)
  394  2      
  395  2          // USER CODE END
  396  2      
  397  2          CCU60_ISR |= 0x0010;  // clear flag CCU60_IS_ICC62R
  398  2        }
  399  1      
  400  1        if(CCU60_IS & 0x0080)  // if CCU60_IS_T12PM
  401  1        {
  402  2          // Timer T12 period match detection
  403  2      
  404  2          // USER CODE BEGIN (NodeI0,19)
  405  2      
  406  2          // USER CODE END
  407  2      
  408  2          CCU60_ISR |= 0x0080;  // clear flag CCU60_IS_T12PM
  409  2        }
  410  1      
  411  1        if(CCU60_IS & 0x0200)  // if CCU60_IS_T13PM
  412  1        {
  413  2          // Timer T13 period match detection
  414  2      
  415  2          // USER CODE BEGIN (NodeI0,21)
  416  2      
  417  2          // USER CODE END
  418  2      
  419  2          CCU60_ISR |= 0x0200;  // clear flag CCU60_IS_T13PM
  420  2        }
  421  1      
  422  1      
  423  1      } //  End of function CCU60_viNodeI0
  424         
  425         
  426         
  427         
C166 COMPILER V7.00, CCU60                                                                 06/30/2019 20:28:30 PAGE 8   

  428         // USER CODE BEGIN (CCU60_General,10)
  429         
  430         // USER CODE END
  431         


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         238     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
